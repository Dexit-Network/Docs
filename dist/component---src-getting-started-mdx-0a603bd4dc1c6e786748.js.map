{"version":3,"sources":["webpack:///../src/getting-started.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"oRAQaA,EAAe,Q,+NAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,mBADR,mBAGA,4OACA,kBACE,GAAM,gBADR,iBAGA,sHACA,kBACE,GAAM,kBADR,kBAGA,0NACA,kBACE,GAAM,qBADR,qBAGA,yGACA,8DACA,kCACA,kDACA,uSAGA,2FAKA,mFACA,kBACE,GAAM,WADR,WAGA,+DAA8C,iBAAGC,WAAW,IACxD,KAAQ,kEADkC,kEAA9C,qZASA,iCACA,yPAEA,0JAEA,qGAIO,iBAAGA,WAAW,IACjB,KAAQ,kCADL,kCAJP,mBAOY,iBAAGA,WAAW,IACtB,KAAQ,uBADA,uBAPZ,8CAWA,qGAIO,iBAAGA,WAAW,IACjB,KAAQ,iCADL,iCAJP,mBAOY,iBAAGA,WAAW,IACtB,KAAQ,+BADA,+BAPZ,4D,6NAeJJ,EAAWK,gBAAiB","file":"component---src-getting-started-mdx-0a603bd4dc1c6e786748.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/benekiva/Desktop/Block-Chain/new doc live/Docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h1>\n    <p>{`Thanks for your interest in DeXit Chain. In this technical documentation, we have covered node setup instructions, our all-in-one command-line interface , and different SDK modules we utilized in the DeXit Chain`}</p>\n    <h2 {...{\n      \"id\": \"running-node\"\n    }}>{`Running Node:`}</h2>\n    <p>{`This is a detailed documentation for setting up a Validator or a full node on DeXit Network. `}</p>\n    <h2 {...{\n      \"id\": \"pre-requisites\"\n    }}>{`Pre-requisites`}</h2>\n    <p>{`We officially support macOS, and Linux only. Other platforms may work but there is no guarantee. We will extend our support to other platforms after we have stabilized our current architecture.`}</p>\n    <h2 {...{\n      \"id\": \"prepare-your-node\"\n    }}>{`Prepare your Node`}</h2>\n    <p>{`To run DeXit nodes, you will need least with the following minimum requirements:`}</p>\n    <p>{`8-core, x86_64 architecture processor`}</p>\n    <p>{`32GB RAM `}</p>\n    <p>{`1 TB of SSD storage space`}</p>\n    <p>{`A broadband Internet connection with up/down 10Mbps\nNote: If you are running a node in Testnet, 120GB SSD, 2CPU/8GB of RAM is sufficient.\ninstall DeXit Fullnode you can download the pre-build binaries from release page or follow the instructions to set up a full node.`}</p>\n    <p>{`Compilation\nRequirements\n• Linux or Mac\n• golang >= 1.13\n• git`}</p>\n    <p>{`Download the config files genesis.json and config.toml by:`}</p>\n    <h2 {...{\n      \"id\": \"testnet\"\n    }}>{`testnet`}</h2>\n    <p>{`wget --no-check-certificate  $(curl -s `}<a parentName=\"p\" {...{\n        \"href\": \"https://api.github.com/repos/DeXit-Network/Dxt/releases/latest\"\n      }}>{`https://api.github.com/repos/DeXit-Network/Dxt/releases/latest`}</a>{` |grep browser_ |grep testnet |cut -d\\\\\" -f4)\nunzip testnet.zip\nLaunch your node and wait for it to get synced\nCreate your Private Key to setup Node account\nYou need to create an account that represents a validator's Account information. Use the following command to create a new account and set a password for that account:\ngeth account new --datadir ./node\necho {your-password} > password.txt`}</p>\n    <p>{`Warning `}</p>\n    <p>{`Please do not expose your RPC endpoints to public network.\ngeth --config ./config.toml --datadir ./node --syncmode snap -unlock {your-validator-address} --password password.txt  --mine  --allow-insecure-unlock --cache 18000`}</p>\n    <p>{`Network Params\nCommunity users can use any Ethereum compatible wallet to configure with DeXit network params, like metamask etc.`}</p>\n    <p>{`MainNet Chain Name:\nChain Name: DeXit\nChain ID: 999\nSymbol: DXT\nRPC URL: `}<a parentName=\"p\" {...{\n        \"href\": \"https://datafeed.dexit.network\"\n      }}>{`https://datafeed.dexit.network`}</a>{`\nExplorer URL: `}<a parentName=\"p\" {...{\n        \"href\": \"https://dxtscan.com\"\n      }}>{`https://dxtscan.com`}</a>{`\nWebSocket RPC URL: wss://dxtscan.network`}</p>\n    <p>{`TestNet Chain Name:\nChain Name: DeXit\nChain ID: 899\nSymbol: DXT\nRPC URL: `}<a parentName=\"p\" {...{\n        \"href\": \"https://testnet.dexit.network\"\n      }}>{`https://testnet.dexit.network`}</a>{`\nExplorer URL: `}<a parentName=\"p\" {...{\n        \"href\": \"https://testnet.dxtscan.com\"\n      }}>{`https://testnet.dxtscan.com`}</a>{`\nWebSocket RPC URL: wss://testnet.dxtscan.network`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}